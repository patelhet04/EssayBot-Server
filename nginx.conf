# Rate limiting zone (10 requests per second per IP)
limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;

server {
    listen 80;
    server_name 129.10.157.87;  # Accept any hostname/IP
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;
    
    # Serve Frontend Static Files (React/Vue/Angular build)
    location / {
        root /var/www/essaybot-frontend/dist;  # Update this path to your frontend build
        try_files $uri $uri/ /index.html;  # SPA fallback
        expires 1h;
        add_header Cache-Control "public, no-cache";
        
        # Handle frontend assets with longer cache
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    }
    
    # Main Express.js API routes
    location /api/ {
        limit_req zone=api burst=20 nodelay;
        
        proxy_pass http://localhost:8000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
    
    # Python Flask routes (AI/ML processing) - Direct routes without /python/ prefix
    location ~ ^/(generate_prompt|grade_bulk_essays|grade_single_essay|generate_rubric|index|index-multiple|analyze_grading)$ {
        limit_req zone=api burst=5 nodelay;  # Lower burst for resource-intensive operations
        
        proxy_pass http://localhost:6000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Longer timeouts for AI processing
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
    }
    
    # Health check endpoints
    location /health {
        proxy_pass http://localhost:8000;
        proxy_set_header Host $host;
        access_log off;
    }
    
    location /flask-health {
        proxy_pass http://localhost:6000/health;
        proxy_set_header Host $host;
        access_log off;
    }
    
    # Static files (if any additional static content)
    location /static/ {
        root /var/www/essaybot;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    
    # Error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    # Logging
    access_log /var/log/nginx/essaybot_access.log;
    error_log /var/log/nginx/essaybot_error.log;
}

# HTTPS Configuration (uncomment and configure when you have SSL certificates)
# server {
#     listen 443 ssl http2;
#     server_name your-domain.com www.your-domain.com;
#     
#     ssl_certificate /path/to/your/certificate.crt;
#     ssl_certificate_key /path/to/your/private.key;
#     
#     # SSL Security
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
#     ssl_prefer_server_ciphers off;
#     
#     # Include all the location blocks from the HTTP server above
#     include /etc/nginx/sites-available/essaybot-locations.conf;
# }

# Redirect HTTP to HTTPS (uncomment when SSL is configured)
# server {
#     listen 80;
#     server_name your-domain.com www.your-domain.com;
#     return 301 https://$server_name$request_uri;
# } 